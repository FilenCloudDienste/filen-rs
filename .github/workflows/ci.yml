name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  ci:
    strategy:
      matrix:
        # We still need to run CI on all OSes
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: CI on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@1.89
        with:
          components: clippy,rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo-build-ci-${{ matrix.os }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install C++ Build Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang libc++-dev libc++abi-dev
      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings
  ci-macos:
    runs-on: macos-latest
    name: CI on macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@1.89
        with:
          components: clippy,rustfmt
          targets: aarch64-apple-ios,aarch64-linux-android
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo-build-ci-macos
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r28c
          add-to-path: true
          local-cache: true
      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-ndk
      - name: Run clippy Android
        run: cargo ndk --target aarch64-linux-android clippy --all-features -- -D warnings
      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings
      - name: Run clippy iOS
        run: cargo clippy --target aarch64-apple-ios --all-features -- -D warnings
      - name: Run rustfmt
        run: cargo fmt --all -- --check
