name: Comprehensive Tests
on:
  # Run at 3 AM every day
  schedule:
    - cron: '0 3 * * *'

  # Allow manual triggering from GitHub UI
  workflow_dispatch:

  # Run on push if commit message contains [test]
  push:
    branches: [main]

  # Run on PR if title or description contains [test]
  pull_request:
    branches: [main]

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.triggered }}
    steps:
      - name: Check if comprehensive tests should run
        id: check
        run: |
          # Always run for scheduled runs and manual dispatch
          if [[ "${{ github.event_name }}" == "schedule" ]] || \
             [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "triggered=true" >> $GITHUB_OUTPUT
            echo "Running comprehensive tests (scheduled or manual trigger)"
            exit 0
          fi

          # Check commit message for [test] trigger
          if [[ "${{ github.event.head_commit.message }}" == *"[test]"* ]]; then
            echo "triggered=true" >> $GITHUB_OUTPUT
            echo "Running comprehensive tests (commit message trigger)"
            exit 0
          fi

          # Check PR title and body for [test] trigger
          if [[ "${{ github.event.pull_request.title }}" == *"[test]"* ]] || \
             [[ "${{ github.event.pull_request.body }}" == *"[test]"* ]]; then
            echo "triggered=true" >> $GITHUB_OUTPUT
            echo "Running comprehensive tests (PR trigger)"
            exit 0
          fi

          echo "triggered=false" >> $GITHUB_OUTPUT
          echo "Skipping comprehensive tests (no trigger found)"

  test:
    needs: check-trigger
    if: needs.check-trigger.outputs.should-run == 'true'
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        version: [V1, V2, V3] # This remains to define which version of the secrets to use
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@1.89
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo-build-test-${{ matrix.os }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install C++ Build Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang libc++-dev libc++abi-dev
      - name: Run tests
        run: cargo test --all-features
        env:
          TEST_EMAIL: ${{ secrets[format('{0}_TEST_ACC_EMAIL', matrix.version)] }}
          TEST_PASSWORD: ${{ secrets[format('{0}_TEST_ACC_PASS', matrix.version)] }}
          TEST_SHARE_EMAIL: ${{ secrets['V2_SHARE_ACC_EMAIL'] }}
          TEST_SHARE_PASSWORD: ${{ secrets['V2_SHARE_ACC_PASS'] }}
          RUST_LOG: trace
