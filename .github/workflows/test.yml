name: Tests
on:
  # Run at 3 AM every day
  schedule:
    - cron: '0 3 * * *'

  # Allow manual triggering from GitHub UI
  workflow_dispatch:

  # Run on push if commit message contains [test]
  push:
    branches: [main]

  # Run on PR if title or description contains [test]
  pull_request:
    branches: [main]

concurrency:
  group: 'test'
  cancel-in-progress: true

jobs:
  test:
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, '[test]') ||
      contains(github.event.pull_request.title, '[test]') ||
      contains(github.event.pull_request.body, '[test]')
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        version: [V1, V2, V3] # This remains to define which version of the secrets to use
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-08-14
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ''
          shared-key: cargo-build-test-${{ matrix.os }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install C++ Build Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang libc++-dev libc++abi-dev
      - name: Install dependencies for avif-decoder (linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libdav1d-dev pkg-config
      - name: Install dependencies for avif-decoder (windows)
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat -disableMetrics
          choco install pkgconfiglite
          vcpkg install dav1d:x64-windows
          echo "PKG_CONFIG_PATH=C:\vcpkg\installed\x64-windows\lib\pkgconfig;$env:PKG_CONFIG_PATH" >> $env:GITHUB_ENV
      - name: Install dependencies for avif-decoder (macos)
        if: runner.os == 'macOS'
        run: |
          brew install dav1d pkg-config
      - name: Run tests
        run: cargo test -F tokio,malformed,heif-decoder,avif-decoder
        env:
          TEST_EMAIL: ${{ secrets[format('{0}_TEST_ACC_EMAIL', matrix.version)] }}
          TEST_PASSWORD: ${{ secrets[format('{0}_TEST_ACC_PASS', matrix.version)] }}
          TEST_SHARE_EMAIL: ${{ secrets['V2_SHARE_ACC_EMAIL'] }}
          TEST_SHARE_PASSWORD: ${{ secrets['V2_SHARE_ACC_PASS'] }}
          IMAP_EMAIL_USER: ${{ secrets['IMAP_EMAIL_USER'] }}
          IMAP_EMAIL_PASSWORD: ${{ secrets['IMAP_EMAIL_PASSWORD'] }}
          RUST_LOG: debug
  test-wasm:
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, '[test]') ||
      contains(github.event.pull_request.title, '[test]') ||
      contains(github.event.pull_request.body, '[test]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-08-14
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ''
          shared-key: cargo-build-release-wasm
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          # waiting on a new release that includes
          # https://github.com/drager/wasm-pack/pull/1428
          tool: wasm-pack
          git: https://github.com/drager/wasm-pack
          rev: cd1718aa7babb656796b8aae3c177ddacce28028
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
      - name: Package WASM bundle
        run:
          | # we use the bundler target because vitest doesn't seem to be able to work with the web target (see https://github.com/vitest-dev/vitest/discussions/4283)
          sh wasm-pack.sh
        working-directory: ./filen-sdk-rs
      - name: Run TS tests
        # we're waiting on https://github.com/RReverser/wasm-bindgen-rayon/issues/32
        # for webkit/safari support
        run: |
          npm install
          npx playwright install --with-deps
          npx vitest run --browser=chromium
          npx vitest run --browser=firefox
        working-directory: ./filen-sdk-rs/web
        env:
          VITE_TEST_EMAIL: ${{ secrets['V2_TEST_ACC_EMAIL'] }}
          VITE_TEST_PASSWORD: ${{ secrets['V2_TEST_ACC_PASS'] }}
          VITE_TEST_SHARE_EMAIL: ${{ secrets['V2_SHARE_ACC_EMAIL'] }}
          VITE_TEST_SHARE_PASSWORD: ${{ secrets['V2_SHARE_ACC_PASS'] }}
